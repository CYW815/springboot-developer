plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'me.cyw'
version = '1.0'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 스프링 데이터 JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2' // 인메모리 데이터베이스
    compileOnly 'org.projectlombok:lombok' //  롬복
    annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok' //  롬복
	testAnnotationProcessor 'org.projectlombok:lombok'

	// 타임리프
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// 스프링  시큐리티를 사용하기 위한 스타터
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// 타임리프에서 스프링 시큐리티를 사용하기 위한 의존성
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	// 스프링 시큐리티를 테스트하기 위한 의존성
	implementation 'org.springframework.security:spring-security-test'

	implementation 'io.jsonwebtoken:jjwt:0.9.1' // 자바 JWT 라이브러리
	implementation 'javax.xml.bind:jaxb-api:2.3.1' // XML 문서와 Java 객체 간 매핑 자동화

	// com.sun.xml.bind
	implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
	implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
	// javax.xml.bind
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

	// OAuth2를 사용하기 위한 스타터 추가
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'mysql:mysql-connector-java'
}

bootJar {
	duplicatesStrategy = 'exclude'
}

tasks.named('test') {
	useJUnitPlatform()
}
